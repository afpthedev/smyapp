application {
  config {
    baseName ReservationApp
    applicationType monolith
    packageName com.mycompany.reservation
    authenticationType jwt
    prodDatabaseType postgresql
    buildTool maven
    clientFramework react
    enableTranslation true
    nativeLanguage en
    languages [en, tr]
  }
  entities *
}

entity Business {
  name String required,
  type BusinessType required,
  address String,
  phone String,
  email String,
  description String
}

enum BusinessType {
  RESTAURANT,
  CAFE,
  GYM,
  DOCTOR,
  HAIRDRESSER,
  EVENT,
  OTHER
}

entity Service {
  name String required,
  description String,
  duration Integer,
  price BigDecimal
}

entity Customer {
  firstName String required,
  lastName String required,
  email String required,
  phone String required,
  notes String   // müşteri hakkında özel not (örn. VIP, alerji bilgisi)
}

entity Reservation {
  date ZonedDateTime required,
  status ReservationStatus required,
  notes String
}

enum ReservationStatus {
  PENDING,
  CONFIRMED,
  CANCELLED,
  COMPLETED
}

entity Payment {
  amount BigDecimal required,
  method PaymentMethod required,
  status PaymentStatus required,
  transactionId String
}

enum PaymentMethod {
  CREDIT_CARD,
  DEBIT_CARD,
  CASH,
  APPLE_PAY,
  GOOGLE_PAY,
  OTHER
}

enum PaymentStatus {
  PENDING,
  PAID,
  FAILED,
  REFUNDED
}

relationship OneToMany {
  Business{services} to Service{business}
  Business{reservations} to Reservation{business}
  Business{payments} to Payment{business}
  Business{customers} to Customer{business}
}

relationship ManyToOne {
  Reservation{service} to Service
  Reservation{customer} to Customer
  Payment{reservation} to Reservation
  Payment{customer} to Customer
}

dto * with mapstruct
service all with serviceClass
paginate Reservation, Business, Customer with pagination
paginate Service with infinite-scroll
