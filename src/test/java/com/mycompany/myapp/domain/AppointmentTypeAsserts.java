package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AppointmentTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppointmentTypeAllPropertiesEquals(AppointmentType expected, AppointmentType actual) {
        assertAppointmentTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertAppointmentTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppointmentTypeAllUpdatablePropertiesEquals(AppointmentType expected, AppointmentType actual) {
        assertAppointmentTypeUpdatableFieldsEquals(expected, actual);
        assertAppointmentTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppointmentTypeAutoGeneratedPropertiesEquals(AppointmentType expected, AppointmentType actual) {
        assertThat(actual)
            .as("Verify AppointmentType auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppointmentTypeUpdatableFieldsEquals(AppointmentType expected, AppointmentType actual) {
        assertThat(actual)
            .as("Verify AppointmentType relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getColor()).as("check color").isEqualTo(expected.getColor()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppointmentTypeUpdatableRelationshipsEquals(AppointmentType expected, AppointmentType actual) {
        // empty method
    }
}
